#!/bin/bash 

INSTALL_DIR=/operator/dip
MOLOCH_DIR=${INSTALL_DIR}/sensor/moloch
MOLOCH_CONFIG=${MOLOCH_DIR}/etc/config.ini

IMAGE=moloch:bluefin
CAPTURE_NAME=moloch-capture
VIEWER_NAME=moloch-viewer
VOLUMES="
  -v ${MOLOCH_DIR}/pcap:/data/moloch/raw
  -v ${MOLOCH_DIR}/log:/data/moloch/logs
  -v ${MOLOCH_CONFIG}:/data/moloch/etc/config.ini
"

usage(){
  echo -e "
    Usage: ${0} <ACTION> <TARGET>
      ACTION:=<init | start | status | restart | stop>
      TARGET:=<capture | viewer>
  "
}

dispatch(){
  case ${1} in
    init) init ;;
    start) start ${2} ;;
    status) status ${2} ;;
    restart) restart ${2} ;;
    stop) stop ${2} ;;
    *)
      echo "Unkown ACTION ${1}"
      usage
      exit 1
    ;;
  esac
}

REPLY=""
prompt(){
  local msg=${1} default=${2}
  REPLY=""
  
  case ${default} in
    '')
      while [ ! ${REPLY} ]; do
        read -p "${msg}: " REPLY
      done
    ;;
    *)
      read -p "${msg}: [${default}] " REPLY
      [ ${REPLY} ] || REPLY=${default}
    ;;
  esac

  
}

init(){
 local intfc url usr pass

  echo "[ WARN ] This will initialize moloch & its elastc indices, erasing previous data"
  prompt "Are you sure you want to continue(y/n)?" 'n'
  [ ${REPLY} = 'y' ] || { echo "Exiting on user command."; exit 0; }
  
  prompt "Enter an interface to capture on" "eth0" && intfc=${REPLY}
  prompt "Enter the Elasticsearch URL" "http://docker.dmss:9200" && url=${REPLY}
  prompt "Enter an initial admin user for moloch" "assessor" && usr=${REPLY}
  prompt "Enter a password for ${usr}" "" && pass=${REPLY}
  
  sed -i "/interface=/c\interface=${intfc}" ${MOLOCH_CONFIG}
  sed -i "/elasticsearch=/c\elasticsearch=${url}" ${MOLOCH_CONFIG}
  sed -i "/passwordSecret =/c\passwordSecret = ${pass}" ${MOLOCH_CONFIG}
  
  run_args="--rm --net=host -ti ${VOLUMES}"
  docker run $run_args ${IMAGE} db/db.pl "${url}" init
  docker run $run_args ${IMAGE} /bin/bash -c "groupmod -g1000 daemon; bin/moloch_add_user.sh ${usr} \"Admin User\" \"${pass}\" --admin"
}

start(){
  local run_args="-d --restart=always --net=host ${VOLUMES}"
  
  case ${1} in
    capture) docker run $run_args --name=${CAPTURE_NAME} \
      ${IMAGE} /bin/bash -c "groupmod -g1000 daemon; bin/moloch-capture -c etc/config.ini"
    ;;
    viewer)
      iptables -I INPUT 1 -p tcp --dport 8005 -j ACCEPT    
      docker run $run_args --name=${VIEWER_NAME} \
        ${IMAGE} /bin/bash -c "groupmod -g1000 daemon; cd viewer; ../bin/node viewer.js -c ../etc/config.ini"
    ;;
    *)
      echo "Unkown TARGET ${1}"
      usage
      exit 1
    ;;
  esac
}

status(){
  case ${1} in
    capture) docker ps -f ${CAPTURE_NAME} ;;
    viewer) docker ps -f ${VIEWER_NAME} ;;
    *)
      echo "Unkown TARGET ${1}"
      usage
      exit 1
    ;;
  esac
}

restart(){
  case ${1} in
    capture) restart ${CAPTURE_NAME} ;;
    viewer) restart ${VIEWER_NAME} ;;
    *)
      echo "Unkown TARGET ${1}"
      usage
      exit 1
    ;;
  esac
}

stop(){
  case ${1} in
    capture) docker stop ${CAPTURE_NAME} && docker rm ${CAPTURE_NAME} ;;
    viewer)
      iptables -D INPUT -p tcp --dport 8005 -j ACCEPT
      docker stop ${VIEWER_NAME} && docker rm ${VIEWER_NAME}
    ;;
    *)
      echo "Unkown TARGET ${1}"
      usage
      exit 1
    ;;
  esac
}

[ ${1} ] || { usage; exit 1; }
dispatch ${1} ${2}