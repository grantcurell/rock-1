---

apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-config
  namespace: kube-system
  labels:
    k8s-app: "{{ metricbeat_name }}"
    kubernetes.io/cluster-service: "true"
data:
  metricbeat.yml: |-
    metricbeat.config.modules:
      # Mounted `"{{ metric metricbeat_module_name }}"` configmap:
      path: ${path.config}/modules.d/*.yml
      # Reload module configs as they change:
      reload.enabled: false
    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ metricbeat_module_name }}"
  namespace: kube-system
  labels:
    k8s-app: "{{ metricbeat_name }}"
    kubernetes.io/cluster-service: "true"
data:
  system.yml: |-
    - module: system
      period: 10s
      metricsets:
        - cpu
        - load
        - memory
        - network
        - process
        - process_summary
        #- core
        #- diskio
        #- socket
      processes: ['.*']
      process.include_top_n:
        by_cpu: 5      # include top 5 processes by CPU
        by_memory: 5   # include top 5 processes by memory
    - module: system
      period: 1m
      metricsets:
        - filesystem
        - fsstat
      processors:
      - drop_event.when.regexp:
          system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'
  kubernetes.yml: |-
    - module: kubernetes
      metricsets:
        - node
        - system
        - pod
        - container
        - volume
      period: 10s
      hosts: ["localhost:10255"]
---
# Deploy a Metricbeat instance per node for node metrics retrieval
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: "{{ metricbeat_name }}"
  namespace: kube-system
  labels:
    k8s-app: "{{ metricbeat_name }}"
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: "{{ metricbeat_name }}"
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: "{{ metricbeat_name }}"
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      containers:
      - name: "{{ metricbeat_name }}"
        image: "{{ metricbeat_image }}:{{ metricbeat_ver }}"
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
          "-system.hostfs=/hostfs",
        ]
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: config
          mountPath: "{{ metricbeat_config_mountpath }}"
          readOnly: true
          subPath: "{{ metricbeat_config_subpath }}"
        - name: modules
          mountPath: "{{ metricbeat_module_mountpath }}"
          readOnly: true
        - name: dockersock
          mountPath: "{{ metricbeat_dockersock_mountpath }}"
        - name: proc
          mountPath: "{{ metricbeat_proc_mountpath }}"
          readOnly: true
        - name: cgroup
          mountPath: "{{ metricbeat_cgroup_mountpath }}"
          readOnly: true
      volumes:
      - name: proc
        hostPath:
          path: "{{ metricbeat_procpath }}"
      - name: cgroup
        hostPath:
          path: "{{ metricbeat_cgrouppath }}"
      - name: dockersock
        hostPath:
          path: "{{ metricbeat_dockersock_path }}"
      - name: config
        configMap:
          defaultMode: 0600
          name: "{{ metricbeat_configMap_name }}"
      - name: modules
        configMap:
          defaultMode: 0600
          name: "{{ metricbeat_module_name }}"
      - name: data
        emptyDir: "{{ metricbeat_data_directory }}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-deployment-modules
  namespace: kube-system
  labels:
    k8s-app: "{{ metricbeat_name }}"
    kubernetes.io/cluster-service: "true"
data:
  # This module requires `kube-state-metrics` up and running under `kube-system` namespace
  kubernetes.yml: |-
    - module: kubernetes
      metricsets:
        - state_node
        - state_deployment
        - state_replicaset
        - state_pod
        - state_container
        # Uncomment this to get k8s events:
        #- event
      period: 10s
      hosts: ["kube-state-metrics:8080"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ metricbeat_name }}"
  namespace: kube-system
  labels:
    k8s-app: "{{ metricbeat_name }}"

...
