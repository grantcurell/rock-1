---
- name: Deploy Topology
  shell: "heketi-cli topology load --json {{ gluster_dir }}/topology.json"
  register: deploy_topology_result

- name: Setup Storage
  shell: "heketi-cli setup-openshift-heketi-storage"
  register: storage_setup_result
  when: deploy_topology_result.rc == 0

- name: Move Storage File
  shell: "mv /root/heketi-storage.json {{ gluster_dir }}/heketi-storage.json"
  when: storage_setup_result.rc == 0
  register: move_storage_file_result

- name: Create Heketi Storage
  shell: |
    kubectl create -f {{ gluster_dir }}/heketi-storage.json
  when: move_storage_file_result.rc == 0
  register: create_heketi_storage_result
  
- name: Gluster | Wait for Heketi Storage
  shell: |
    {% raw %}
    GO='{{.metadata.name}}'
    kubectl get svc heketi-storage-endpoints -o go-template="$GO"
    {% endraw %}
  register: output
  until: output.stdout == 'heketi-storage-endpoints'
  retries: 30
  delay: 15
  when: "(create_heketi_storage_result.changed) and (create_heketi_storage_result.rc == 0)"

- name: Cleanup Heketi Bootstrap
  command: "kubectl delete all,service,jobs,deployment,secret --selector deploy-heketi"
  register: cleanup_bootstrap_result

