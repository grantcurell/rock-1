######################################################
################# Setup Elasticsearch ################
######################################################
---

- name: Setup Elastic repo
  yum_repository:
    name: elastic-5.x
    description: Elastic Stack repository for 5.x
    baseurl: "{{ elastic_baseurl }}"
    gpgkey:  "{{ elastic_gpgurl }}"
    gpgcheck: no
  when: rock_online_install

- name: Install Elasticsearch package
  yum:
    name: elasticsearch
    state: installed

- name: "Create Elasticsearch directory"
  file:
    group: "{{ es_group }}"
    mode: 755
    owner: "{{ es_user }}"
    path: "{{ es_data_dir }}"
    state: directory

- name: "Setup elasticsearch config"
  template:
    dest: /etc/elasticsearch/elasticsearch.yml
    group: "{{ es_group }}"
    mode: 755
    owner: root
    src: templates/elasticsearch.yml.j2

- name: "Create elasticsearch systemd override dir"
  file:
    group: root
    mode: 755
    owner: root
    path: /etc/systemd/system/elasticsearch.service.d
    state: directory

- name: "Enable elasticsearch memlock in service override"
  copy:
    content: "{{ es_memlock_override }}"
    dest: /etc/systemd/system/elasticsearch.service.d/override.conf
    group: root
    mode: 644
    owner: root

- name: "Setup elasticsearch data dir in sysconfig"
  lineinfile:
    dest: /etc/sysconfig/elasticsearch
    line: "DATA_DIR={{ es_data_dir }}"
    regexp: DATA_DIR=

- name: "Setup elasticsearch jvm options"
  template:
    dest: /etc/elasticsearch/jvm.options
    group: "{{ es_group }}"
    mode: 755
    owner: root
    src: templates/es-jvm.options.j2

- name: "Install ROCK Elasticsearch cleanup script"
  template:
    dest: /usr/local/bin/es_cleanup.sh
    group: root
    mode: 755
    owner: root
    src: templates/es_cleanup.sh.j2

- name: "Set elasticsearch cleanup cron job"
  cron:
    cron_file: rocknsm_es_maintenance
    hour: 0
    job: "/usr/local/bin/es_cleanup.sh > /dev/null 2>&1"
    minute: 1
    name: "ES maintenance"
    user: root

- name: "Enable and start Elasticsearch"
  notify:
    - "es maintenance"
  service:
    enabled: yes
    name: elasticsearch
    state: started

- name: "Wait for Elasticsearch to become ready"
  wait_for: "host=localhost port=9200"

- name: "Check for Bro mapping templates"
  failed_when: false
  register: bro_mapping
  uri:
    method: GET
    url: "http://localhost:9200/_template/bro_index"
  when: included_components.bro.enabled

- name: "Load Bro Elasticsearch mapping templates"
  uri:
    body: "{{ lookup('file', 'es-bro-mappings.json')}}"
    body_format: json
    method: PUT
    url: "http://localhost:9200/_template/bro_index"
  when: "included_components.bro.enabled and bro_mapping.status == 404"
