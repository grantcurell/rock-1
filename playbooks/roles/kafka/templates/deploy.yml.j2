apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    component: kafka
spec:
  serviceName: "kafka"
  replicas: {{ groups['sensors'] | length }}
  selector:
    matchLabels:
     component: kafka
  template:
    metadata:
      labels:
        component: kafka
    spec:
      initContainers:
      - name: permissions
        image: busybox:latest
        command: ['chown','-R','999:998','/tmp/kafka-logs']
        volumeMounts:
        - name: kafka-data
          mountPath: {{ kafka_data_path }}
      containers:
      - name: zookeeper
        image: {{ zookeeper_image }}:{{ zookeeper_ver }}
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        envFrom:
        - configMapRef:
            name: zookeeper
        volumeMounts:
         - mountPath: "{{ zookeeper_data_path }}"
           name: zookeeper-data

      - name: kafka
        image: {{ kafka_image }}:{{ kafka_ver }}
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        ports:
        - containerPort: {{ kafka_port }}
          name: transport
        volumeMounts:
          - name: kafka-data
            mountPath: "{{ kafka_data_path }}"
          - name: kafka
            mountPath: /etc/kafka/server.properties
            subPath: server.properties
      nodeSelector:
        role: sensor
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: role
                operator: In
                values:
                - sensor
            topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: kafka
        configMap:
          name: kafka
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: gluster-heketi
      resources:
        requests:
          storage: {{ kafka_pv_size }}Gi
